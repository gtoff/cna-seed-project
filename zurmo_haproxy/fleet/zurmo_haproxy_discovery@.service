[Unit]
Description=Announces Loadbalancer
BindsTo=zurmo_haproxy@%i.service
After=zurmo_haproxy@%i.service
Requires=zurmo_haproxy@%i.service

[Service]
EnvironmentFile=/etc/environment

Restart=always

ExecStart=/bin/sh -c "UUID=`uuidgen`; echo $UUID > /tmp/zurmo_haproxy@%i.uuid; TTL=10; SLEEP_TIME=7; \
  etcdctl setdir /services/loadbalancer/$UUID --ttl $TTL; \
  etcdctl set /services/loadbalancer/$UUID/service_instance_name zurmo_haproxy@%i.service; \
  etcdctl setdir /services/loadbalancer/$UUID/settings --ttl $TTL; \
    while true; \
      do \
        etcdctl updatedir /services/loadbalancer/$UUID --ttl $TTL; \
        etcdctl updatedir /services/loadbalancer/$UUID/settings --ttl $TTL; \
        etcdctl set /services/loadbalancer/$UUID/host %H --ttl $TTL; \
        etcdctl set /services/loadbalancer/$UUID/ip ${COREOS_PRIVATE_IPV4} --ttl $TTL; \
        etcdctl set /services/loadbalancer/$UUID/port 80 --ttl $TTL; \
        etcdctl set /services/loadbalancer/$UUID/endpoint ${COREOS_PRIVATE_IPV4}:80 --ttl $TTL; \
        etcdctl set /services/loadbalancer/$UUID/distribution roundrobin --ttl $TTL; \
        etcdctl set /services/loadbalancer/$UUID/settings/distribution roundrobin --ttl $TTL; \
        sleep $SLEEP_TIME; \
      done"

ExecStop=/bin/sh -c "etcdctl rm --recursive /services/loadbalancer/`cat /tmp/zurmo_haproxy@%i.uuid` && rm -f /tmp/zurmo_haproxy@%i.uuid"

#[X-Fleet]
#MachineOf=zurmo_haproxy@%i.service

[X-Fleet]
Global=true
